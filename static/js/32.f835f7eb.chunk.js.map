{"version":3,"file":"static/js/32.f835f7eb.chunk.js","mappings":"qIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C,uJClCMC,EAAM,+BACNC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMnB,QAAQT,OAAO,IAAI6B,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOR,EAAY,GAAD,OAAIF,EAAJ,uCAAsCC,GACzD,CAGM,SAASU,EAAeC,GAC7B,OAAOV,EAAY,GAAD,OAAIF,EAAJ,kBAAiBY,EAAjB,oBAAoCX,GACvD,CAEM,SAASY,EAAkBD,GAChC,OAAOV,EAAY,GAAD,OACbF,EADa,kBACAY,EADA,4BAC2BX,GAE9C,CAEM,SAASa,EAAkBF,GAChC,OAAOV,EAAY,GAAD,OACbF,EADa,kBACAY,EADA,4BAC2BX,GAE9C,CAEM,SAASc,EAAqBC,GACnC,OAAOd,EAAY,GAAD,OACbF,EADa,iCACeC,EADf,kBAC4Be,GAE/C,C,sFCiBD,UAhDkB,WAChB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAA0BM,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAajB,OALAC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,IAAeC,GACZtB,KAAK8B,EACT,GAAE,CAACR,KAGF,iCACE,mBAAQc,QAbG,kBAAML,EACnBE,EAASI,MAAT,UACOJ,EAASI,MAAMC,KAAKC,UAD3B,OACsCN,EAASI,MAAMC,KAAKE,QACtD,UAHS,EAaX,qBACCX,IACC,4BACE,gBAAKY,IAAG,yCAAoCZ,EAAMa,aAAeC,IAAKd,EAAMe,SAC5E,wBAAKf,EAAMe,SACX,0CAAkBf,EAAMgB,iBACxB,sCACA,uBAAIhB,EAAMiB,YACV,mCACCjB,EAAMkB,SACL,wBACGlB,EAAMkB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAChB,wBAAcA,GAALD,EADO,OAKtB,mBACA,mDACA,2BACE,yBAAI,SAAC,KAAD,CAASE,GAAG,OAAOd,MAAOJ,EAASI,MAAQ,CAAEC,KAAML,EAASI,MAAMC,MAAS,KAA3E,qBACJ,yBAAI,SAAC,KAAD,CAASa,GAAG,UAAUd,MAAOJ,EAASI,MAAQ,CAAEC,KAAML,EAASI,MAAMC,MAAS,KAA9E,2BAEN,mBACA,SAAC,KAAD,SAKT,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/fetchMovies.js","pages/MovieInfo/MovieInfo.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const URL = 'https://api.themoviedb.org/3';\nconst KEY = 'f72ccb0427a42697e4de02bf8efae0dc';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchMovies(`${URL}/trending/movie/day?api_key=${KEY}`);\n}\n\n\nexport function fetchMovieInfo(movieId) {\n  return fetchMovies(`${URL}/movie/${movieId}?api_key=${KEY}`);\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchMovies(\n    `${URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchMovies(\n    `${URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n}\n\nexport function fetchWithQueryMovies(searchQuery) {\n  return fetchMovies(\n    `${URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}\n","import { useParams, NavLink, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieInfo } from 'api/fetchMovies';\n\nconst MovieInfo = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const goBack = () => navigate(\n    location.state\n      ? `${location.state.from.pathname}${location.state.from.search}`\n      : '/movies'\n  );\n\n  useEffect(() => {\n    fetchMovieInfo(movieId)\n      .then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      <button onClick={goBack}>Go back</button>\n      {movie && (\n        <div>\n          <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} alt={movie.title}></img>\n          <h2>{movie.title}</h2>\n          <p>Vote average: {movie.vote_average}</p>\n          <p>Overview:</p>\n          <p>{movie.overview}</p>\n          <p>Genres:</p>\n          {movie.genres && (\n            <ul>\n              {movie.genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n          )}\n          <hr />\n          <p>Additional information</p>\n          <ul>\n            <li><NavLink to=\"cast\" state={location.state ? { from: location.state.from } : null}>Cast</NavLink></li>\n            <li><NavLink to=\"reviews\" state={location.state ? { from: location.state.from } : null}>Reviews</NavLink></li>\n          </ul>\n          <hr />\n          <Outlet />\n        </div>\n      )}\n    </>\n  )\n}\nexport default MovieInfo\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","KEY","fetchMovies","url","config","fetch","response","ok","json","Error","fetchTrending","fetchMovieInfo","movieId","fetchMovieCredits","fetchMovieReviews","fetchWithQueryMovies","searchQuery","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","useEffect","onClick","state","from","pathname","search","src","poster_path","alt","title","vote_average","overview","genres","map","id","name","to"],"sourceRoot":""}