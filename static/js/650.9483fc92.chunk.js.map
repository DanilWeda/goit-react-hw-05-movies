{"version":3,"file":"static/js/650.9483fc92.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/fetchMovies.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const URL = 'https://api.themoviedb.org/3';\nconst KEY = 'f72ccb0427a42697e4de02bf8efae0dc';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchMovies(`${URL}/trending/movie/day?api_key=${KEY}`);\n}\n\n\nexport function fetchMovieInfo(movieId) {\n  return fetchMovies(`${URL}/movie/${movieId}?api_key=${KEY}`);\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchMovies(\n    `${URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchMovies(\n    `${URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n}\n\nexport function fetchWithQueryMovies(searchQuery) {\n  return fetchMovies(\n    `${URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}\n","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ onSearch }) => {\n  const [value, setValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    if (!value) return alert('Enter the name of the film');\n    onSearch(value);\n    setValue('');\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        value={value}\n        onChange={handleInputChange}\n      />\n      <button onClick={handleSubmit}>Search</button>\n    </div>\n  )\n}\n\nSearchbar.propTypes = {\n  onSearch: PropTypes.func.isRequired\n}\n\nexport default Searchbar\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchWithQueryMovies } from 'api/fetchMovies';\nimport Searchbar from 'components/Searchbar/Searchbar';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n\n  const handleSearch = (query) => {\n    setSearchParams({ query: query });\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    if (!searchParams.get('query')) return;\n\n    fetchWithQueryMovies(searchParams.get('query'))\n      .then(({ results }) => setMovies(results));\n  }, [searchParams.get('query')]);\n\n  return (\n    <>\n      <Searchbar onSearch={handleSearch} />\n      {!!movies.length && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  )\n}\nexport default Movies\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","KEY","fetchMovies","url","config","fetch","response","ok","json","Error","fetchTrending","fetchMovieInfo","movieId","fetchMovieCredits","fetchMovieReviews","fetchWithQueryMovies","searchQuery","onSearch","useState","setValue","type","placeholder","onChange","e","target","toLowerCase","onClick","alert","useSearchParams","searchParams","setSearchParams","movies","setMovies","location","useLocation","useEffect","get","results","query","length","map","id","title","to","state","from"],"sourceRoot":""}